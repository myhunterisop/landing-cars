$columns: 12;
$gutter-width: 32px;
$half-gutter-width: $gutter-width * 0.5;
$gutter-compensation: -1 * $half-gutter-width;

@mixin grid-column () {
    flex-grow: 0;
    flex-shrink: 0;
    padding-right: $half-gutter-width;
    padding-left: $half-gutter-width;

    @include breakpoint(laptop) {
        padding-left: calc(var(--token-grids-laptop-gutter) * 0.5);
        padding-right: calc(var(--token-grids-laptop-gutter) * 0.5);
    }

    @include breakpoint(tablet) {
        padding-left: calc(var(--token-grids-tablet-gutter) * 0.5);
        padding-right: calc(var(--token-grids-tablet-gutter) * 0.5);
    }

    @include breakpoint(v-tablet) {
        padding-left: calc(var(--token-grids-v-tablet-gutter) * 0.5);
        padding-right: calc(var(--token-grids-v-tablet-gutter) * 0.5);
    }

    @include breakpoint(mobile) {
        padding-left: calc(var(--token-grids-mobile-gutter) * 0.5);
        padding-right: calc(var(--token-grids-mobile-gutter) * 0.5);
    }
}

@mixin grid-row () {
    display: flex;
    flex-wrap: wrap;
    margin-right: $gutter-compensation;
    margin-left: $gutter-compensation;

    @include breakpoint(laptop) {
        margin-left: calc((var(--token-grids-laptop-gutter) * 0.5) * -1);
        margin-right: calc((var(--token-grids-laptop-gutter) * 0.5) * -1);
    }

    @include breakpoint(tablet) {
        margin-left: calc((var(--token-grids-tablet-gutter) * 0.5) * -1);
        margin-right: calc((var(--token-grids-tablet-gutter) * 0.5) * -1);
    }

    @include breakpoint(v-tablet) {
        margin-left: calc((var(--token-grids-v-tablet-gutter) * 0.5) * -1);
        margin-right: calc((var(--token-grids-v-tablet-gutter) * 0.5) * -1);
    }

    @include breakpoint(mobile) {
        margin-left: calc((var(--token-grids-mobile-gutter) * 0.5) * -1);
        margin-right: calc((var(--token-grids-mobile-gutter) * 0.5) * -1);
    }
}

@mixin grid-column-span ($columns-to-span: $columns, $total-columns-in-row: $columns) {
    @if ($columns-to-span ==auto) {
        flex-grow: 1;
        flex-basis: 0;
        max-width: 100%;

    }

    @else {
        $span-percentage: calc($columns-to-span / $total-columns-in-row);

        flex-basis: $span-percentage * 100%;
        max-width: $span-percentage * 100%;
    }
}

@mixin grid-column-offset ($columns-to-offset, $total-columns-in-row: $columns) {
    margin-left: calc(($columns-to-offset / $total-columns-in-row) * 100%);
}

.row {
    @include grid-row;
    margin-top: -$gutter-width;

    >[class*="col-"] {
        margin-top: $gutter-width;
    }
}

[class*="col-"] {
    @include grid-column;
}